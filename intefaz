import javax.swing.*;
import java.awt.*;

public class HostingPartitionManagerUI {

    public static void main(String[] args) {
        SwingUtilities.invokeLater(HostingPartitionManagerUI::createAndShowGUI);
    }

    private static void createAndShowGUI() {
        JFrame frame = new JFrame("Gestión de Hosting y Particiones");
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        frame.setSize(800, 600);

        JTabbedPane tabbedPane = new JTabbedPane();

        // Tab 1: Gestión de Hosting
        JPanel hostingPanel = createHostingPanel();
        tabbedPane.addTab("Gestión de Hosting", hostingPanel);

        // Tab 2: Gestión de Particiones
        JPanel partitionPanel = createPartitionPanel();
        tabbedPane.addTab("Gestión de Particiones", partitionPanel);

        frame.add(tabbedPane);
        frame.setVisible(true);
    }

    private static JPanel createHostingPanel() {
        JPanel panel = new JPanel(new GridLayout(0, 2, 10, 10));

        // Campos para Gestión de Hosting
        JTextField siteNameField = new JTextField();
        JTextField ftpUserField = new JTextField();
        JPasswordField ftpPasswordField = new JPasswordField();
        JTextField quotaField = new JTextField();
        JComboBox<String> dbTypeBox = new JComboBox<>(new String[]{"MySQL", "PostgreSQL"});
        JTextField dbNameField = new JTextField();
        JTextField dbUserField = new JTextField();
        JPasswordField dbPasswordField = new JPasswordField();

        JButton createClientButton = new JButton("Crear Cliente");

        panel.add(new JLabel("Nombre del Sitio:"));
        panel.add(siteNameField);
        panel.add(new JLabel("Usuario FTP:"));
        panel.add(ftpUserField);
        panel.add(new JLabel("Contraseña FTP:"));
        panel.add(ftpPasswordField);
        panel.add(new JLabel("Cuota (MB):"));
        panel.add(quotaField);
        panel.add(new JLabel("Gestor de BD:"));
        panel.add(dbTypeBox);
        panel.add(new JLabel("Nombre de la BD:"));
        panel.add(dbNameField);
        panel.add(new JLabel("Usuario de la BD:"));
        panel.add(dbUserField);
        panel.add(new JLabel("Contraseña de la BD:"));
        panel.add(dbPasswordField);
        panel.add(createClientButton);

        createClientButton.addActionListener(e -> {
            String siteName = siteNameField.getText();
            String ftpUser = ftpUserField.getText();
            String ftpPassword = new String(ftpPasswordField.getPassword());
            int quota = Integer.parseInt(quotaField.getText());
            String dbType = (String) dbTypeBox.getSelectedItem();
            String dbName = dbNameField.getText();
            String dbUser = dbUserField.getText();
            String dbPassword = new String(dbPasswordField.getPassword());

            HostingManager manager = new HostingManager();
            boolean success = manager.crearCliente(siteName, ftpUser, ftpPassword, quota, dbType, dbName, dbUser, dbPassword);
            JOptionPane.showMessageDialog(panel, success ? "Cliente creado exitosamente." : "Error al crear el cliente.");
        });

        return panel;
    }

    private static JPanel createPartitionPanel() {
        JPanel panel = new JPanel(new GridLayout(0, 2, 10, 10));

        // Campos para Gestión de Particiones
        JTextField diskField = new JTextField();
        JTextField startField = new JTextField();
        JTextField endField = new JTextField();
        JComboBox<String> fileSystemBox = new JComboBox<>(new String[]{"ext4", "xfs", "ntfs"});
        JTextField mountPointField = new JTextField();

        JButton createPartitionButton = new JButton("Crear Partición");
        JButton listDisksButton = new JButton("Listar Discos");

        panel.add(new JLabel("Disco (e.g., /dev/sdb):"));
        panel.add(diskField);
        panel.add(new JLabel("Inicio (e.g., 0%):"));
        panel.add(startField);
        panel.add(new JLabel("Fin (e.g., 50%):"));
        panel.add(endField);
        panel.add(new JLabel("Sistema de Archivos:"));
        panel.add(fileSystemBox);
        panel.add(new JLabel("Punto de Montaje:"));
        panel.add(mountPointField);
        panel.add(createPartitionButton);
        panel.add(listDisksButton);

        createPartitionButton.addActionListener(e -> {
            String disk = diskField.getText();
            String start = startField.getText();
            String end = endField.getText();
            String fileSystem = (String) fileSystemBox.getSelectedItem();
            String mountPoint = mountPointField.getText();

            PartitionManager partitionManager = new PartitionManager();
            boolean success = partitionManager.crearParticion(disk, start, end, fileSystem, mountPoint);
            JOptionPane.showMessageDialog(panel, success ? "Partición creada exitosamente." : "Error al crear la partición.");
        });

        listDisksButton.addActionListener(e -> {
            PartitionManager partitionManager = new PartitionManager();
            String disks = partitionManager.listarDiscos();
            JOptionPane.showMessageDialog(panel, disks);
        });

        return panel;
    }
}
